name: Frontend Tests

on:
  push:
    branches:
      - branch_name

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    env:
      MONGO_USER: ${{ secrets.MONGO_USER }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      MONGO_HOST: ${{ secrets.MONGO_HOST }}
      MONGO_DB: ${{ secrets.MONGO_DB }}
      FIREBASE_SERVICE_KEY: ${{ secrets.FIREBASE_SERVICE_KEY }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      IMGUR_KEY: ${{ secrets.IMGUR_KEY }}

      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_PHONE: ${{ secrets.TWILIO_PHONE }}
      FLASK_APP: ${{ secrets.FLASK_APP }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build and run Backend
      run: |
        cd backend
        touch firebase_service_key.json
        echo "$FIREBASE_SERVICE_KEY" > firebase_service_key.json
        cp firebase_service_key.json ./tests
        ls
        cat firebase_service_key.json
        docker build -t backend .
        docker run --name backend -d -e SENDGRID_API_KEY=$SENDGRID_API_KEY -e SENDER_EMAIL=$SENDER_EMAIL -e TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID -e TWILIO_AUTH_TOKEN=$TWILIO_AUTH_TOKEN -e TWILIO_PHONE=$TWILIO_PHONE -e FLASK_APP=$FLASK_APP -e IMGUR_KEY=$IMGUR_KEY -e FIREBASE_API_KEY=$FIREBASE_API_KEY -e MONGO_USER=$MONGO_USER -e MONGO_PASSWORD=$MONGO_PASSWORD -e MONGO_HOST=$MONGO_HOST -e MONGO_DB=$MONGO_DB -e GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS -p 8000:8000 backend 

    - name: Build and run Frontend
      run: |
        cd frontend
        docker build -t frontend-app .
        docker run -d -p 3000:3000 frontend-app
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Wait for Frontend to be ready
      run: |
        retries=3000
        until curl -sSf http://localhost:3000; do
          ((retries--)) || exit 1
          sleep 1
        done
    
    - name: Run Cypress Tests
      run: |
        npm install
        cd tests
        npx cypress run --headless
